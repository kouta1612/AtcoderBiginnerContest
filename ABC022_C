import java.util.Scanner;

public class Main {

	static int n, m;
	static int[] u, v, l;
	static long[][] gragh, gragh2;

	public static void main(String[] args) {
		Scanner sc = new Scanner(System.in);
		n = sc.nextInt();
		m = sc.nextInt();
		u = new int[m];
		v = new int[m];
		l = new int[m];
		for(int i = 0 ; i < m ; i++) {
			u[i] = sc.nextInt();
			v[i] = sc.nextInt();
			l[i] = sc.nextInt();
		}
		gragh = new long[n][n];
		gragh2 = new long[n][n];
		for(int i = 0 ; i < n ; i++) {
			for(int j = 0 ; j < n ; j++) {
				if(i == j) gragh[i][j] = gragh2[i][j] = 0;
				else gragh[i][j] = gragh[j][i] = gragh2[i][j] = gragh2[j][i] = Long.MAX_VALUE / 10;
			}
		}
		for(int i = 0 ; i < m ; i++) {
			u[i]--;
			v[i]--;
			gragh[u[i]][v[i]] = gragh[v[i]][u[i]] = gragh2[u[i]][v[i]] = gragh2[v[i]][u[i]] = l[i];
		}
		// graghは0の経路を通らない様に設定
		for(int i = 1 ; i < n ; i++) {
			gragh[0][i] = Long.MAX_VALUE / 10;
			gragh[i][0] = Long.MAX_VALUE / 10;
		}
		// 0を通らないワーシャルフロイド
		for(int k = 1 ; k < n ; k++) {
			for(int i =1 ; i < n ; i++) {
				for(int j = 1 ; j < n ; j++) {
					gragh[i][j] = Math.min(gragh[i][j], gragh[i][k] + gragh[k][j]);
				}
			}
		}
		long ans = Long.MAX_VALUE / 10;
		for(int i = 1 ; i < n ; i++) {
			for(int j = 1 ; j < n ; j++) {
				if(i != j) {
					ans = Math.min(ans, gragh2[0][i] + gragh2[j][0] + gragh[i][j]);
				}
			}
		}
		if(ans >= Long.MAX_VALUE / 10) {
			System.out.println(-1);
			return;
		}
		System.out.println(ans);
	}
}
